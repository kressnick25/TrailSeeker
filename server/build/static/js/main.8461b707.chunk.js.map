{"version":3,"sources":["icons sync /^/.//.*/.svg$","icons/clear-day.svg","icons/clear-night.svg","icons/cloudy.svg","icons/fog.svg","icons/partly-cloudy-day.svg","icons/partly-cloudy-night.svg","icons/rain.svg","icons/snow.svg","icons/wind.svg","helpers.js","Weather/WeatherForecast.js","Weather/Weather.js","Trail.js","Content.js","App.js","serviceWorker.js","index.js"],"names":["map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","capitalizeAll","string","replace","a","toUpperCase","WeatherForecast","props","data","className","Label","as","basic","color","ribbon","content","day","index","key","align","dateInt","date","Date","getDay","getDayInitial","time","Popup","header","icon","temperatureHigh","temperatureLow","trigger","src","require","alt","width","height","Weather","current","detail","temperature","toFixed","humidity","windSpeed","precipProbability","TravelInfo","Segment","textAlign","href","lat","lng","target","size","Icon","name","distance","duration","Trail","useState","descActive","setActive","Card","Content","Header","Rating","style","disabled","defaultRating","rating","maxRating","Accordion","styled","Title","active","onClick","description","attached","length","difficulty","charAt","slice","lon","weather","currentWeather","url","setData","useEffect","fetch","method","headers","body","JSON","stringify","location","toString","then","response","json","catch","err","Container","Group","centered","trail","Loader","GEOLOCATION_API","App","setLocation","loading","setLoading","inverted","Subheader","Divider","Button","primary","Boolean","window","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.8461b707.chunk.js","sourcesContent":["var map = {\n\t\"./clear-day.svg\": 300,\n\t\"./clear-night.svg\": 301,\n\t\"./cloudy.svg\": 302,\n\t\"./fog.svg\": 303,\n\t\"./partly-cloudy-day.svg\": 304,\n\t\"./partly-cloudy-night.svg\": 305,\n\t\"./rain.svg\": 306,\n\t\"./snow.svg\": 307,\n\t\"./wind.svg\": 308\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 299;","module.exports = __webpack_public_path__ + \"static/media/clear-day.53f709c5.svg\";","module.exports = __webpack_public_path__ + \"static/media/clear-night.b87ca8b6.svg\";","module.exports = __webpack_public_path__ + \"static/media/cloudy.79b3c647.svg\";","module.exports = __webpack_public_path__ + \"static/media/fog.3694ef67.svg\";","module.exports = __webpack_public_path__ + \"static/media/partly-cloudy-day.534afba6.svg\";","module.exports = __webpack_public_path__ + \"static/media/partly-cloudy-night.675a7cdd.svg\";","module.exports = __webpack_public_path__ + \"static/media/rain.316ec331.svg\";","module.exports = __webpack_public_path__ + \"static/media/snow.35404d3a.svg\";","module.exports = __webpack_public_path__ + \"static/media/wind.2a8661ec.svg\";","export function capitalizeFirst(string) {\n    return string.charAt(0).toUpperCase() + string.slice(1);\n}\n\nexport function capitalizeAll(string){\n    return string.replace(/(?:^|\\s)\\S/g, (a) =>  a.toUpperCase() );\n}\n\nexport function removeDash(string) {\n    return string.replace(/-/g, \" \");\n}","import React from 'react';\nimport {capitalizeAll, removeDash} from \"../helpers\";\nimport {Label, Popup} from 'semantic-ui-react';\n\nexport function WeatherForecast(props) {\n    let data = props.data;\n    return (\n        <div className={'weatherForecast'}>\n            <Label as='a' basic color='teal' ribbon content={'Forecast'}/>\n            <span>\n                <table>\n\n                    <thead>\n                    <tr>\n                    {data.map((day, index) =>\n                        <td key={index}  align={'center'}>{getDayInitial(day.time)}</td>\n                    )}\n                    </tr>\n                    </thead>\n                    <tbody>\n                    <tr>\n                    {data.map((day, index) =>\n                        <td key={index}>\n                            <Popup\n                                header={capitalizeAll( removeDash(day.icon ))}\n                                content={`High: ${day.temperatureHigh} Low: ${day.temperatureLow}`}\n                                trigger={<img src={require(`../icons/${day.icon}.svg`)}\n                                              alt={'icon'}\n                                              width={'28em'}\n                                              height={'36em'}/>}\n                            />\n                        </td>\n                    )}\n                    </tr>\n                    </tbody>\n                </table>\n            </span>\n        </div>\n    )\n}\n\nfunction getDayInitial(dateInt) {\n    let days = ['Su', 'M', 'T', 'W', 'Th', 'F', 'S'];\n    let date = new Date(dateInt * 1000);\n    return days[date.getDay()];\n}\n\nexport default WeatherForecast;","import React from 'react';\nimport WeatherForecast from \"./WeatherForecast\";\nimport {Label, Grid} from 'semantic-ui-react';\n\nexport function Weather (props) {\n    const data = props.data;\n    const current = props.current;\n    return(\n        <div>\n            <Label as='a' color='teal' ribbon content={'Current Weather'}/>\n            <table>\n                <tbody>\n                <tr>\n                    <Label\n                        content={'Temp'}\n                        detail={current.temperature.toFixed(0) + \" C\"}\n                    />\n                    <Label\n                        content={'Humidity'}\n                        detail={(current.humidity * 100).toFixed(0) + \"%\"}\n                    />\n                </tr>\n                <tr>\n                    <Label\n                        content={'Wind'}\n                        detail={current.windSpeed.toFixed(1) + 'km/h'}\n                    />\n                    <Label\n                        content={'Rain chance'}\n                        detail={current.precipProbability + '%'}\n                    />\n                </tr>\n                </tbody>\n            </table>\n            <WeatherForecast data={data}/>\n        </div>\n    )\n}\n","import React, {useState} from \"react\";\nimport {Card, Icon, Accordion, Rating, Divider, Label, Segment} from 'semantic-ui-react';\nimport {capitalizeFirst} from \"./helpers\";\nimport WeatherIcon from 'react-icons-weather';\nimport {Weather} from \"./Weather\";\n\n\n\nexport function Trail (props) {\n    const data = props.data;\n    const [descActive, setActive] = useState(false);\n    return (\n      <Card color='green'>\n          <Card.Content>\n              <Card.Header>{data.name}\n              <Rating\n                  style={{'floated': 'right'}}\n                  icon='star'\n                  disabled\n                  defaultRating={data.rating}\n                  maxRating={5} />\n              </Card.Header><br/>\n              <Accordion styled>\n                  <Accordion.Title active={descActive} onClick={e=> setActive(!descActive)}>\n                      <Icon name='dropdown' />\n                      Description\n                  </Accordion.Title>\n                  <Accordion.Content active={descActive}>\n                      <p>{data.description}</p><br />\n                  </Accordion.Content>\n              </Accordion>\n              <Segment attached>\n                <span>Length: {data.length} km</span>\n                <span style={{'float': 'right'}}>\n                    Difficulty:\n                    <b>\n                        {data.difficulty ?\n                        capitalizeFirst(data.difficulty) :\n                        \"Unknown\"}\n                    </b>\n                </span>\n              </Segment>\n              {data.distance &&\n              <TravelInfo lat={data.lat} lng={data.lon} distance={data.distance} duration={data.duration} />}\n              <Weather data={data.weather} current={data.currentWeather}/>\n          </Card.Content>\n      </Card>\n    )\n}\n\nfunction TravelInfo(props) {\n    const MapsUrlApi = \"https://www.google.com/maps/search/?api=1&query=\"\n    \n    return (\n        <Segment basic textAlign={'center'}>\n            <Label\n                as={'a'}\n                href={MapsUrlApi + props.lat + ',' + props.lng}\n                color={'orange'}\n                target={'_blank'}\n                size={'large'}\n            >\n                <Icon name='car' />\n                {props.distance}, {props.duration}\n            </Label>\n        </Segment>\n    )\n}\n\nexport default Trail;","import React, {useState, useEffect} from 'react';\nimport Trail from './Trail';\nimport {Card, Container, Loader, Transition} from 'semantic-ui-react';\n\n// SET THIS TO INSTANCE IP\n// const url = \"http://3.104.75.166:3000/\";\nconst url = \"http://localhost:3000/\";\n\nexport function Content (props) {\n    const [data, setData] = useState();\n    useEffect(() => {\n        fetch(url, {\n            method: 'POST',\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json'\n              },\n            body: JSON.stringify({\n                lat: props.location.lat.toString(),\n                lng: props.location.lng.toString(),\n            }\n        )})\n            .then(response => response.json())\n            .then(body => setData(body))\n            .catch(err => err);\n    }, [/*location*/])\n    if (!data) return <Loader active size='large'>Loading</Loader>\n\n\n    return (\n        <Container textAlign='justified'>\n            <Card.Group centered>\n                {   data.map(trail => <Trail data={trail} key={trail.id}/> )}\n            </Card.Group>\n        </Container>\n    ) \n}\n\nexport default Content;","import React, {useState} from 'react';\nimport './App.css';\nimport Content from \"./Content\"\nimport {Button, Header, Divider, Container, Segment, Icon} from \"semantic-ui-react\";\n\nconst GEOLOCATION_API = \"https://www.googleapis.com/geolocation/v1/geolocate?key=AIzaSyBAeo-vXKY-RSDl3YIT2SKsDZrc67ejQWU\";\n\nfunction App() {\n  const [location, setLocation] = useState();\n  const [loading, setLoading] = useState(false);\n  function handleMyLocation(e) {\n    setLoading(true);\n    fetch(GEOLOCATION_API, {method: 'post'})\n            .then(response => response.json())\n            .then(body => {\n              setLocation(body.location);\n              setLoading(false);  \n            })\n            .catch(err => err);\n  }\n  return (\n    <div className=\"App\">\n        <Container>\n            <Segment inverted color={'green'}>\n            <Header as='h1' style={{'pad-top': '5px'}}>\n                TrailSeeker\n                <Header.Subheader>Welcome to Trail Seeker</Header.Subheader>\n            </Header>\n            </Segment>\n            <Divider/>\n            { location ?\n              <Content location={location} /> :\n                <div className={'location'}>\n                    <Button\n                        primary\n                        loading={loading}\n                        onClick={e => handleMyLocation()}\n                        size={'large'}\n                    >\n                        <Icon name={'location arrow'}/>\n                        Use My Location\n                    </Button>\n                </div>\n            }\n        </Container>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'semantic-ui-css/semantic.min.css'\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}